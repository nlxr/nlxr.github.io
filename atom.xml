<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>笨鸟先飞</title>
  
  <subtitle>人生如逆旅，我亦是行人</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nlxr.github.io/"/>
  <updated>2018-11-28T05:07:21.505Z</updated>
  <id>https://nlxr.github.io/</id>
  
  <author>
    <name>nlxr</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>顺序表的实现</title>
    <link href="https://nlxr.github.io/2018/11/26/%E9%A1%BA%E5%BA%8F%E8%A1%A8%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://nlxr.github.io/2018/11/26/顺序表的实现/</id>
    <published>2018-11-26T14:11:00.000Z</published>
    <updated>2018-11-28T05:07:21.505Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>顺序表是线性表的顺序存储结构，是用一段地址连续的存储单元依次存储线性表的数据元素，通常用一维数组实现。并且只要确定了起始地址，计算任意一个元素存储地址时间是相等的，所以其存储结构为<strong>随机存储</strong>结构。即存取第n个数据时，不用先访问前(n-1)个数据。<br><a id="more"></a></p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="1-定义类模板"><a href="#1-定义类模板" class="headerlink" title="1.定义类模板"></a>1.定义类模板</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxSize=<span class="number">100</span>;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">DataType</span>&gt;           //定义模板类<span class="title">SeqList</span></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">SeqList</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">     SeqList() &#123;length=<span class="number">0</span>;&#125;          <span class="comment">//无参，建立一个空的顺序表</span></span><br><span class="line">     SeqList(DataType a[],<span class="keyword">int</span> n);   <span class="comment">//有参，建立一个长度为n的顺序表</span></span><br><span class="line">     <span class="function"><span class="keyword">int</span> <span class="title">Length</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> length;&#125;   <span class="comment">//求线性表长度</span></span><br><span class="line">     <span class="function">DataType <span class="title">Get</span><span class="params">(<span class="keyword">int</span> i)</span></span>;           <span class="comment">//按位查找</span></span><br><span class="line">     <span class="function"><span class="keyword">int</span> <span class="title">Locate</span><span class="params">(DataType x)</span></span>;        <span class="comment">//按值查找</span></span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> i,DataType x)</span></span>; <span class="comment">//插入，在第i个位置插入值为x的元素</span></span><br><span class="line">     <span class="function">DataType <span class="title">Delete</span><span class="params">(<span class="keyword">int</span> i)</span></span>;        <span class="comment">//删除，删除第i个元素</span></span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="title">PrintList</span><span class="params">()</span></span>;              <span class="comment">//遍历，按序号输出</span></span><br><span class="line">    ~ SeqList();</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    DataType data[MaxSize];         <span class="comment">//存放元素的数组</span></span><br><span class="line">    <span class="keyword">int</span> length;                     <span class="comment">//线性表长度</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="2-构造函数"><a href="#2-构造函数" class="headerlink" title="2.构造函数"></a>2.构造函数</h2><p>(1) 无参构造函数<br>创建一个空的顺序表，只需将顺序表长度length初始化为0.<br>(2)有参构造函数<br>将给定的数组元素作为线性表数据元素传入顺序表中，并将传入的元素个数作为顺序表长度。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">DataType</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">SeqList</span>&lt;DataType&gt;:</span>:SeqList(DataType a[],<span class="keyword">int</span> n)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;MaxSize) <span class="keyword">throw</span> <span class="string">"参数非法"</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        data[i]=a[i];</span><br><span class="line">    length=n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-查找操作"><a href="#3-查找操作" class="headerlink" title="3.查找操作"></a>3.查找操作</h2><p>(1)按位查找<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">DataType</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">DataType</span> <span class="title">SeqList</span>&lt;DataType&gt;:</span>:Get(<span class="keyword">int</span> i)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">1</span> &amp;&amp; i&gt;length) <span class="keyword">throw</span> <span class="string">"查找位置非法"</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> data[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>(2)按值查找<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">DataType</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">int</span> <span class="title">SeqList</span>&lt;DataType&gt;:</span>:Locate(DataType x)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">        <span class="keyword">if</span>(data[i]==x) <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="4-插入操作"><a href="#4-插入操作" class="headerlink" title="4.插入操作"></a>4.插入操作</h2><p>伪代码<br>1.如果表满，抛出上溢异常；<br>2.如果插入位置不合理，抛出位置异常；<br>3.将最后一个元素直至第i个元素分别向后移动一个位置；<br>4.将元素x插入到位置i处；<br>5.表长加1；<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">DataType</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">SeqList</span>&lt;DataType&gt;:</span>:Insert(<span class="keyword">int</span> i,DataType x)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(length&gt;=MaxSize) <span class="keyword">throw</span> <span class="string">"上溢"</span>;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">1</span> || i&gt;length+<span class="number">1</span>) <span class="keyword">throw</span> <span class="string">"位置"</span>;</span><br><span class="line">    <span class="keyword">for</span>(j=length;j&gt;=i;j--)</span><br><span class="line">        data[j]=data[j<span class="number">-1</span>];</span><br><span class="line">    data[i<span class="number">-1</span>]=x;</span><br><span class="line">    length++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="5-删除操作"><a href="#5-删除操作" class="headerlink" title="5.删除操作"></a>5.删除操作</h2><p>伪代码<br>1.如果表空，抛出下溢异常；<br>2.如果删除位置不合理，抛出删除位置异常；<br>3.取出被删元素；<br>4.从下标为i的元素(第i+1个元素)开始移动，直至将最后一个元素前移为止；<br>5.表长减一，返回被删元素；<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">DataType</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">DataType</span> <span class="title">SeqList</span>&lt;DataType&gt;:</span>:Delete(<span class="keyword">int</span> i)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(length==<span class="number">0</span>) <span class="keyword">throw</span> <span class="string">"下溢"</span>;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">1</span> || i&gt;length) <span class="keyword">throw</span> <span class="string">"位置"</span>;</span><br><span class="line">    <span class="keyword">int</span> x=data[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(j=i;j&lt;length;j++)</span><br><span class="line">        data[j<span class="number">-1</span>]=data[j];</span><br><span class="line">    length--;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="6-遍历操作"><a href="#6-遍历操作" class="headerlink" title="6.遍历操作"></a>6.遍历操作</h2><p>按下标依次输出各元素<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">DataType</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">SeqList</span>&lt;DataType&gt;:</span>:PrintList()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;data[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>对于顺序表，在等概率情况下，插入和删除一个元素平均需移动<strong>表长的一半</strong>个元素，而具体的移动元素个数与<strong>表长</strong>和<strong>该元素在表中位置</strong>有关。<br>其优点是无需为表中元素之间的逻辑关系增加额外的存储空间，且可以快速地存取表中任意位置的元素，即随机存取。但是顺序表插入与删除操作需移动大量元素；表的容量难以确定，造成存储空间的浪费。<br>所以顺序存储结构适合线性表总长度基本确定，且很少进行插入和删除操作，但要求以最快的速度存取线性表中的元素的情况。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h1&gt;&lt;p&gt;顺序表是线性表的顺序存储结构，是用一段地址连续的存储单元依次存储线性表的数据元素，通常用一维数组实现。并且只要确定了起始地址，计算任意一个元素存储地址时间是相等的，所以其存储结构为&lt;strong&gt;随机存储&lt;/strong&gt;结构。即存取第n个数据时，不用先访问前(n-1)个数据。&lt;br&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://nlxr.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>java猜字母游戏</title>
    <link href="https://nlxr.github.io/2018/11/24/java%E7%8C%9C%E5%AD%97%E6%AF%8D%E6%B8%B8%E6%88%8F/"/>
    <id>https://nlxr.github.io/2018/11/24/java猜字母游戏/</id>
    <published>2018-11-24T11:41:36.000Z</published>
    <updated>2018-11-24T12:58:24.680Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java基础实现猜字母游戏"><a href="#java基础实现猜字母游戏" class="headerlink" title="java基础实现猜字母游戏"></a>java基础实现猜字母游戏</h1><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>程序随机产生5个字母，由玩家来猜测，可猜测多次，每猜测一次，由系统提示结果，完全正确则游戏结束，计算游戏得分并输出，若没有猜对，则提示猜测结果，如猜对几个字符以及猜对了几个字符的位置，并提示玩家继续游戏。<br><a id="more"></a></p><h2 id="程序设计及内容"><a href="#程序设计及内容" class="headerlink" title="程序设计及内容"></a>程序设计及内容</h2><h3 id="1-实现字母生成方法"><a href="#1-实现字母生成方法" class="headerlink" title="1.实现字母生成方法"></a>1.实现字母生成方法</h3><p>声明一个字符类型数组存储26个大写字母，再声明一个boolean数组，长度为26，初始值均为false，若某个字母被选中，设置该字母在数组中对应位置上的值为true，表示该字母被选中。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    *随机生成需要猜测的字母序列</span></span><br><span class="line"><span class="comment">    *<span class="doctag">@return</span> 存储随机字符的数组</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">char</span>[] generate()&#123;</span><br><span class="line">        <span class="keyword">char</span>[] chs =<span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">char</span> letters[]= &#123;<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>,<span class="string">'G'</span>,<span class="string">'H'</span>,<span class="string">'I'</span>,<span class="string">'J'</span>,<span class="string">'K'</span>,<span class="string">'L'</span>,<span class="string">'M'</span>,<span class="string">'N'</span>,<span class="string">'O'</span>,<span class="string">'P'</span>,<span class="string">'Q'</span>,<span class="string">'R'</span>,<span class="string">'S'</span>,</span><br><span class="line">                <span class="string">'T'</span>,<span class="string">'U'</span>,<span class="string">'V'</span>,<span class="string">'W'</span>,<span class="string">'X'</span>,<span class="string">'Y'</span>,<span class="string">'Z'</span>&#125;;</span><br><span class="line">        <span class="keyword">boolean</span> flags[]=<span class="keyword">new</span> <span class="keyword">boolean</span>[letters.length];  <span class="comment">//记载字母是否被选中</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;chs.length;i++) &#123;               <span class="comment">//随机选择5个字母</span></span><br><span class="line">            <span class="keyword">int</span> index;</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                index =(<span class="keyword">int</span>)(Math.random()*(letters.length));  <span class="comment">//0到25的随机数</span></span><br><span class="line">            &#125;<span class="keyword">while</span>(flags[index]==<span class="keyword">true</span>);   <span class="comment">//当下标对应的开关为true时，表示已存过，应重新生成index</span></span><br><span class="line">                                          <span class="comment">//当下标对应的开头为false时，表示未存过，则index可用，do...while结束</span></span><br><span class="line">            chs[i]=letters[index];</span><br><span class="line">            flags[index]=<span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chs;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h3 id="2-实现字母检测方法"><a href="#2-实现字母检测方法" class="headerlink" title="2.实现字母检测方法"></a>2.实现字母检测方法</h3><p>逐一取出玩家录入的每个字符与结果字符串一一比较，比较字符本身和字符所在位置，并记载比较结果。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 比较玩家输入字母序列和程序所生成字母序列，逐一比较字符以及位置，并记载比较结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chs</span></span><br><span class="line"><span class="comment">     *            程序生成字母序列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> input</span></span><br><span class="line"><span class="comment">     *            玩家输入字符序列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存储比较的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> []check (<span class="keyword">char</span>[] chs,<span class="keyword">char</span>[] input) &#123;</span><br><span class="line">        <span class="keyword">int</span> result[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;input.length;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;chs.length;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(input[i]==chs[j]) &#123;</span><br><span class="line">                    result[<span class="number">1</span>]++;</span><br><span class="line">                    <span class="keyword">if</span>(i==j) &#123;</span><br><span class="line">                        result[<span class="number">0</span>]++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h3 id="3-实现主方法"><a href="#3-实现主方法" class="headerlink" title="3.实现主方法"></a>3.实现主方法</h3><ul><li>调用generate()方法，产生5个字母。</li><li>使用while(true)循环允许多次猜测。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count=<span class="number">0</span>;            <span class="comment">//记录玩家猜测的总次数</span></span><br><span class="line">        <span class="keyword">char</span> input[]=<span class="keyword">null</span>;      <span class="comment">//保存用户猜测的数据</span></span><br><span class="line">        <span class="keyword">char</span> chs[]=generate();       <span class="comment">//保存随机生成的字母</span></span><br><span class="line">        <span class="keyword">int</span> result[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>]; <span class="comment">//第一个保存完全猜对字母个数 第二个保存猜对字母个数</span></span><br><span class="line">        </span><br><span class="line">        Scanner scanner=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"GuessingGame 欢迎尝试猜字母游戏!"</span>);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"游戏开始，请输入所猜的5个字母序列：（exit-退出）"</span>);</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">            String inputStr=scanner.next().trim().toUpperCase();  <span class="comment">//scanner.next()是从键盘输入一个字符串，trim是去掉字符串首尾的空格，toUpperCase是把字符串中的字母转换成大写</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">"EXIT"</span>.equals(inputStr)) &#123;</span><br><span class="line">                System.out.println(<span class="string">"感谢您的尝试，再见！"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            input=inputStr.toCharArray(); <span class="comment">//把字符串转为char字符数组</span></span><br><span class="line">            result=check(chs,input);</span><br><span class="line">            <span class="keyword">if</span>(result[<span class="number">0</span>]==chs.length) &#123;</span><br><span class="line">                <span class="keyword">int</span> score=<span class="number">100</span>*chs.length-count*<span class="number">10</span>;</span><br><span class="line">                System.out.println(<span class="string">"恭喜你猜对了！你的得分是"</span>+score);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                count++;</span><br><span class="line">                System.out.println(<span class="string">"你猜对"</span>+result[<span class="number">1</span>]+<span class="string">"个字符，其中"</span>+result[<span class="number">0</span>]+<span class="string">"个字符位置正确!(总次数="</span>+count+<span class="string">",exit-退出)"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-完整代码"><a href="#4-完整代码" class="headerlink" title="4.完整代码"></a>4.完整代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> guess_da;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GuessingGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count=<span class="number">0</span>;            <span class="comment">//记录玩家猜测的总次数</span></span><br><span class="line">        <span class="keyword">char</span> input[]=<span class="keyword">null</span>;      <span class="comment">//保存用户猜测的数据</span></span><br><span class="line">        <span class="keyword">char</span> chs[]=generate();       <span class="comment">//保存随机生成的字母</span></span><br><span class="line">        <span class="keyword">int</span> result[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>]; <span class="comment">//第一个保存完全猜对字母个数 第二个保存猜对字母个数</span></span><br><span class="line">        </span><br><span class="line">        Scanner scanner=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"GuessingGame 欢迎尝试猜字母游戏!"</span>);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"游戏开始，请输入所猜的5个字母序列：（exit-退出）"</span>);</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">            String inputStr=scanner.next().trim().toUpperCase();  <span class="comment">//scanner.next()是从键盘输入一个字符串，trim是去掉字符串首尾的空格，toUpperCase是把字符串中的字母转换成大写</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">"EXIT"</span>.equals(inputStr)) &#123;</span><br><span class="line">                System.out.println(<span class="string">"感谢您的尝试，再见！"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            input=inputStr.toCharArray(); <span class="comment">//把字符串转为char字符数组</span></span><br><span class="line">            result=check(chs,input);</span><br><span class="line">            <span class="keyword">if</span>(result[<span class="number">0</span>]==chs.length) &#123;</span><br><span class="line">                <span class="keyword">int</span> score=<span class="number">100</span>*chs.length-count*<span class="number">10</span>;</span><br><span class="line">                System.out.println(<span class="string">"恭喜你猜对了！你的得分是"</span>+score);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                count++;</span><br><span class="line">                System.out.println(<span class="string">"你猜对"</span>+result[<span class="number">1</span>]+<span class="string">"个字符，其中"</span>+result[<span class="number">0</span>]+<span class="string">"个字符位置正确!(总次数="</span>+count+<span class="string">",exit-退出)"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *随机生成需要猜测的字母序列</span></span><br><span class="line"><span class="comment">    *<span class="doctag">@return</span> 存储随机字符的数组</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">char</span>[] generate()&#123;</span><br><span class="line">        <span class="keyword">char</span>[] chs =<span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">char</span> letters[]= &#123;<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>,<span class="string">'G'</span>,<span class="string">'H'</span>,<span class="string">'I'</span>,<span class="string">'J'</span>,<span class="string">'K'</span>,<span class="string">'L'</span>,<span class="string">'M'</span>,<span class="string">'N'</span>,<span class="string">'O'</span>,<span class="string">'P'</span>,<span class="string">'Q'</span>,<span class="string">'R'</span>,<span class="string">'S'</span>,</span><br><span class="line">                <span class="string">'T'</span>,<span class="string">'U'</span>,<span class="string">'V'</span>,<span class="string">'W'</span>,<span class="string">'X'</span>,<span class="string">'Y'</span>,<span class="string">'Z'</span>&#125;;</span><br><span class="line">        <span class="keyword">boolean</span> flags[]=<span class="keyword">new</span> <span class="keyword">boolean</span>[letters.length];  <span class="comment">//记载字母是否被选中</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;chs.length;i++) &#123;               <span class="comment">//随机选择5个字母</span></span><br><span class="line">            <span class="keyword">int</span> index;</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                index =(<span class="keyword">int</span>)(Math.random()*(letters.length));  <span class="comment">//0到25的随机数</span></span><br><span class="line">            &#125;<span class="keyword">while</span>(flags[index]==<span class="keyword">true</span>);   <span class="comment">//当下标对应的开关为true时，表示已存过，应重新生成index</span></span><br><span class="line">                                          <span class="comment">//当下标对应的开头为false时，表示未存过，则index可用，do...while结束</span></span><br><span class="line">            chs[i]=letters[index];</span><br><span class="line">            flags[index]=<span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 比较玩家输入字母序列和程序所生成字母序列，逐一比较字符以及位置，并记载比较结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chs</span></span><br><span class="line"><span class="comment">     *            程序生成字母序列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> input</span></span><br><span class="line"><span class="comment">     *            玩家输入字符序列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存储比较的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> []check (<span class="keyword">char</span>[] chs,<span class="keyword">char</span>[] input) &#123;</span><br><span class="line">        <span class="keyword">int</span> result[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;input.length;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;chs.length;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(input[i]==chs[j]) &#123;</span><br><span class="line">                    result[<span class="number">1</span>]++;</span><br><span class="line">                    <span class="keyword">if</span>(i==j) &#123;</span><br><span class="line">                        result[<span class="number">0</span>]++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看完java基础语法后，写了这个猜字母的小游戏，以此来检验和夯实知识。<br>还有，这个游戏要迅速猜中有点难度。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;java基础实现猜字母游戏&quot;&gt;&lt;a href=&quot;#java基础实现猜字母游戏&quot; class=&quot;headerlink&quot; title=&quot;java基础实现猜字母游戏&quot;&gt;&lt;/a&gt;java基础实现猜字母游戏&lt;/h1&gt;&lt;h2 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;p&gt;程序随机产生5个字母，由玩家来猜测，可猜测多次，每猜测一次，由系统提示结果，完全正确则游戏结束，计算游戏得分并输出，若没有猜对，则提示猜测结果，如猜对几个字符以及猜对了几个字符的位置，并提示玩家继续游戏。&lt;br&gt;
    
    </summary>
    
    
      <category term="java基础" scheme="https://nlxr.github.io/tags/java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>你好，Hexo</title>
    <link href="https://nlxr.github.io/2018/11/22/%E4%BD%A0%E5%A5%BD%EF%BC%8CHexo/"/>
    <id>https://nlxr.github.io/2018/11/22/你好，Hexo/</id>
    <published>2018-11-22T13:31:54.000Z</published>
    <updated>2018-11-22T13:32:17.249Z</updated>
    
    <content type="html"><![CDATA[<p>开始写博客了！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;开始写博客了！&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://nlxr.github.io/2018/11/22/hello-world/"/>
    <id>https://nlxr.github.io/2018/11/22/hello-world/</id>
    <published>2018-11-22T10:20:09.598Z</published>
    <updated>2018-11-24T13:00:23.714Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
